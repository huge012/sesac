01.12


* 게시판 만들기
게시글 목록 -> 제목 클릭해 상세 내용 들어가기
사용자가 클릭한 게시글 정보를 함께 보내야 함


* 폼 태그 제외한 모든 방식 = get방식
폼 태그는 유일하게 get, post 방식 선택 가능


* GET 방식
<form action="write.jsp" method="get">
	<input type="text" name="id" value="aaa">
</form>

http://localhost:9999/Mission-Web/jsp/board/write.jsp?id=aaa


* POST 방식
<form action="write.jsp" method="post">
	<input type="text" name="id" value="aaa">
</form>

요청body
id=aaa 데이터 전달됨



* EL - Expression Language
- 표현식(<%= %>) 대신 사용
- 자바 클래스 메소드 호출 및 집합 객체에 대한 접근 방법 제공
- JSP 내장객체(공유영역) 중 4가지 기본영역에 대한 속성 사용
- $ { 변수명 }
- 산술연산자, 비교연산자, 논리연산자, empty, 삼항연산자

* ER 객체 이름 찾는 순서
1) 내장 객체 이름에서 먼저 찾음
- param : request.getParameter("id") key 조건 넣고싶을 경우 param.(아이디)
- paramValues : request.getParameterValues("id")

2) 4가지 공유 영역에서 찾음
JSP : pageContext	request		session		application
EL :  pageScope	requestScope	sessionScope	applicationScope
-> ${} 안에서만 EL 표기로 사용

* 인자 안 날아올 경우 - 표현식에선 500에러, EL객체 표현식에선 null(에러x)


request.setAttribute request 와 session 등록( “name”, “ 코드 작성임꺽정?? ” );
session.setAttribute ( “userInfo”, “sbc:1234” );


* 공유영역에 객체 등록/조회/삭제
등록 : (영역명).setAttribute(키, 값)
조회 : (형변환)(영역명).getAttribute(키)
삭제 : (영역명).removeAttribute(키)

이름 : String형
값 : Object형, 명시적 형변환 해줘야 함


* 공유 영역
pageContext
- 자기 자신에게 등록되어 있는 것만 확인

request
- 한 개의 요청에 응답이 올 때까지 서버에서 다양한 jsp 파일이 값 공유(1회성)

session
- 브라우저 종료 전까지 공유하는 값(여러 요청동안 공유)

application
- 다양한 유저끼리도 공유됨


* $ {객체.이름}
- 객체 : 자바빈즈 클래스, 맵 객체(key, value 쌍)
- 객체가 자바빈즈 클래스일 경우, 이름의 get 메소드 호출
  ㄴ ${board.no} -> board의 getNo() 호출
- 객체가 맵일 경우, 이름이 key값을 의미

* 자바빈즈 클래스 : VO 형태
- 패키지로 선언
- 클래스는 public
- 매개변수 없는 생성자 선언
- 멤버 변수는 전부 private
- 멤버변수에 대한 setter, getter


* ${객체[이름]}
- 객체 : 자바빈즈 클래스, 맵 객체, 배열, 콜랙션
- 객체가 리스트일 경우, nameList.get(0) -> ${ names[0] } 로 표현 가능
- 클래스, 맵도 동일하게 표현 가능하나 [] 사이에 '' 써야해서 귀찮아짐




----

* JSTL ( JSP Standard Tag Library)
- JSP 안에 자바 코드 안 쓰는 것이 목표
- 자주 사용되는 태크를 표준으로 만들어서 제공
- 빈도순 : core > fmt, 함수 > sql, xml
- 접두어 사용 <%@ taglib prefix="c" uri="어쩌구" %>
- prefix : 접두어 지정
- 종료 태그 필수 <c:set .... /> or <c:set ...></c:set>

* set 태그 : <c:set var="" value"" [scope=""] />
- 공유영역에 변수 설정 시 사용
- var : 변수명, value : 설정값, scope : 공유영역(page, request, session, application)
- scope 안 정하면 기본 page

* remove 태그 : <c:remove var="cnt" [scope="page"] />
- 공유영역에 설정된 변수 삭제
- var : 변수명, scope : 삭제할 변수가 설정된 영역
- scope 없으면 모든 영역 삭제

* out 태그 : <c:out value="" [escapeXml=""] [defaut=""] />
- 출력 전용
- value : 출력내용, escapeXml : true-문자로 인식/false-태그로 인식, default : value 속성값 없을 때 디폴트로 출력

* if 태그 : <c:if test="조건"> ..(참일 때).. </c:if>
- elseif, else 없음, 다중 선택에 불리함

* choose 태그 : 다중조건처리
<c:choose>
	<c:when test=""> 
		... 
	</c:when>
	<c:otherwise>
		...
	</c:otherwise>
</c:choose>

* forEach 태그
- (공유 영역에 있는)배열/콜렉션 객체를 반복할 경우
<c:forEach var="" items="" [varStatus=""]>
</c:forEach>

- 지정된 회수만큼 반복할 경우
<c:forEach var="" begin="" end="">
</c:forEach>

*https://tomcat.apache.org/download-taglibs.cgi#Standard-1.2.5

jar 파일 4개 다 다운로드
