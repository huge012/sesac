// list.jsp 수정 - PageVO 관련 코드 추가, page 관련 div 추가
1. 상단 PageVO 코드 추가

/* 최초 게시글 목록 들어왔을 때의 페이지 설정 */
	
	int nowPage = 1;
	
	/* 페이지 파라미터가 존재할 경우 파라미터 가져옴 */
	if (request.getParameter("page") != null) {
		nowPage = Integer.parseInt(request.getParameter("page"));
	}

	/* tbl_board에서 전체 게시글(번호, 제목, 작성자, 등록일) 조회 */
	BoardDAO dao = new BoardDAO();
	List<BoardVO> list = dao.selectAllBoard(nowPage);
	
	pageContext.setAttribute("boards", list);

	/* pageVO 설정 */
	int total = dao.countAll();
	PageVO pageVO = new PageVO();
	pageVO.setPage(nowPage);
	pageVO.setTotalCount(total);
	pageContext.setAttribute("paging", pageVO);

// 페이지 관련 div
<div id="paging">
	<%-- 이전 글씨 보이기 -  paging.prev == true일 때 --%>
	<c:if test="${ paging.prev }">
		<a href="list.jsp?page=${ paging.beginPage-1 }">이전</a>... 
	</c:if>

	<%-- 페이지 숫자 보이기 - 현재 페이지는 일반 글씨, 그 외 : 페이지 번호 넘겨주는 링크 --%>
	<c:forEach var="i" step="1" begin="${ paging.beginPage }" end="${ paging.endPage }">
		<c:choose>
			<c:when test="${ paging.page == i }">
				<span>${ i }</span>
			</c:when>
			<c:otherwise>
				<a class="otherpage" href="list.jsp?page=${ i }">${ i }</a>
			</c:otherwise>
		</c:choose>
	</c:forEach>

	<%-- 다음 글씨 보이기 - paging.next == true일 때 --%>
	<c:if test="${ paging.next }">
		... <a href="list.jsp?page=${ paging.endPage+1 }">다음</a>
	</c:if>
</div>



// pageVO.java 생성
package kr.co.mlec.page.vo;

public class PageVO {
	private int page;	// 현재 페이지
	private int totalCount;	// 총 게시글 수
	private int beginPage;	// 페이지 시작 번호
	private int endPage;	// 페이지 끝 번호
	private int displayRow;	// 한 페이지에 보여줄 게시글 수
	private int displayPage;	// 한 줄에 보여줄 페이지 수
	boolean prev;	// 이전 버튼 존재 유무
	boolean next;	// 다음 버튼 존재 유무
	
	// 생성자
	public PageVO() {
		page = 1;
		displayRow = 10;
		displayPage = 10;
	}
	
	public PageVO(int page, int totalCount, int beginPage, int endPage, int displayRow, int displayPage, boolean prev,
			boolean next) {
		super();
		this.page = page;
		this.totalCount = totalCount;
		this.beginPage = beginPage;
		this.endPage = endPage;
		this.displayRow = displayRow;
		this.displayPage = displayPage;
		this.prev = prev;
		this.next = next;
	}
	
	// getter, setter
	public int getPage() {
		return page;
	}

	public void setPage(int page) {
		this.page = page;
	}

	public int getTotalCount() {
		return totalCount;
	}

	public void setTotalCount(int totalCount) {
		this.totalCount = totalCount;
		paging();
	}

	public int getBeginPage() {
		return beginPage;
	}

	public void setBeginPage(int beginPage) {
		this.beginPage = beginPage;
	}

	public int getEndPage() {
		return endPage;
	}

	public void setEndPage(int endPage) {
		this.endPage = endPage;
	}

	public int getDisplayRow() {
		return displayRow;
	}

	public void setDisplayRow(int displayRow) {
		this.displayRow = displayRow;
	}

	public int getDisplayPage() {
		return displayPage;
	}

	public void setDisplayPage(int displayPage) {
		this.displayPage = displayPage;
	}

	public boolean isPrev() {
		return prev;
	}

	public void setPrev(boolean prev) {
		this.prev = prev;
	}

	public boolean isNext() {
		return next;
	}

	public void setNext(boolean next) {
		this.next = next;
	}

	//toString()
	@Override
	public String toString() {
		return "PageVO [page=" + page + ", totalCount=" + totalCount + ", beginPage=" + beginPage + ", endPage="
				+ endPage + ", displayRow=" + displayRow + ", displayPage=" + displayPage + ", prev=" + prev + ", next="
				+ next + "]";
	}
	
	// totalPage 들어오면 endPage, beginPage, totalPage, prev, next 자동 셋팅
	private void paging() {
		// 현재의 10번째 페이지 번호
		endPage = ((int)Math.ceil(page/(double)displayPage))*displayPage;
		
		// 현재의 1번째 페이지 번호
		beginPage = endPage - (displayPage - 1);
		
		// 종합 페이지
		int totalPage = (int)Math.ceil(totalCount/(double)displayRow);
		
		if (totalPage<endPage) {
			endPage = totalPage;
			next = false;
		}
		else {
			next = true;
		}
		prev = (beginPage==1) ? false : true;
	}
	
}



// BoardDAO 수정 - selectAllBoard 메소드 수정, countAll 메소드 추가
1. selectAllBoard 메소드 수정 - 현재 페이지 파라미터 받음, 페이지에 맞는 게시글만 뽑아옴

public List<BoardVO> selectAllBoard(int page) {
		
		int startNum = page*10-9;
		int endNum = page*10;
		List<BoardVO> list = new ArrayList<>(); 
		
		try {
			conn = new ConnectionFactory().getConnection();
			
			StringBuilder sql = new StringBuilder();
			sql.append("select no, title, writer, to_char(reg_date, 'yyyy-mm-dd') as reg_date ");
			sql.append(" from ( ");
			sql.append(" 		select * from ( ");
			sql.append(" 			select ROW_NUMBER() over(order by no desc) row_num, tbl_board.* from tbl_board ");
			sql.append(" 		) where row_num >= ? ");
			sql.append(" ) where row_num <= ? ");
				
			pstmt = conn.prepareStatement(sql.toString());
			pstmt.setInt(1, startNum);
			pstmt.setInt(2, endNum);
			ResultSet rs = pstmt.executeQuery();
			
			while(rs.next()) {
				int no = rs.getInt("no");
				String title = rs.getString("title");
				String writer = rs.getString("writer");
				String regDate = rs.getString("reg_date");
				BoardVO board = new BoardVO(no, title, writer, regDate);
				// System.out.println(board);	
				list.add(board);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			JDBCClose.close(pstmt, conn);
		}
		return list;
	}



2. countAll() 메소드 추가 - 전체 게시글 수 세는 메소드


public int countAll()
	{
		int result = 0;
		
		StringBuilder sql = new StringBuilder();
		sql.append(" select count(*) as count ");
		sql.append(" from tbl_board ");
		
		try(
				Connection conn = new ConnectionFactory().getConnection();
				PreparedStatement pstmt = conn.prepareStatement(sql.toString());
		) {
				ResultSet rs = pstmt.executeQuery();
				if(rs.next())
					result = rs.getInt("count");
				
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return result;
	}