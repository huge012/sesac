엔터프라이즈 버전

- Open Perspective  -> 자바 클릭 : 자바 프로젝트 전용으로 pakage Explorer가 구성됨

- 패키지, 클래스 : 클래스명이 중복되더라도 패키지명으로 구분이 가능해짐. 클래스를 구분짓는 역할
회사 도메인 이름을 거꾸로 쓰는 방식 사용(뫄뫄.뫄뫄.뫄뫄) (kr.co.mlec) - 회사 구분이 됨

kr
    co
        mlec
        lg
        samsung
    ac
        snu
        ewha
us

- 자바의 모든 클래스는 Object 클래스를 상속받음
(equils, toString, Hashcode 등을 사용할 수 있음)

- 상속 : 하위 클래스 객체가 상위 클래스의 객체와 메소드를 사용
(A is a B 패턴-상속, A has a B-멤버, A kind of B 패턴-상속  ::  각각의 객체가 눈에 보이는 사물을 만들 때만 상속)
관리용 클래스는 상속의 의미가 다름 : 기존에 있는 메소드를 활용하기 위한 상속
메인에서 이미 상속받고 있기때문에 메인 아래에서는 굳이 쓸 필요가 없음. (단일상속)

- 인터페이스 : 다중상속이 가능함

- 접근제한자 (멤버변수와 메소드에서만 네 가지 다 사용 가능, class의 경우 public과 default만 사용)
public - 어떤 패키지에서든지 멤버 볼 수 있음.
protect - 같은 패키지 내에서만 멤버 볼 수 있음. 단, 상속관계에 있을 경우 다른 패키지에서 볼 수 있음.
default - 같은 패키지 내에서만 멤버 볼 수 있음.
private - 밖에서 볼 수 없음.

* 멤버변수는 대체로 private, 메소드는 대체로 public

객체지향의 특징
- 캡슐화
<상속, 추상클래스, 인터페이스에 대한 이야기>
- 다형성
- 상속
- 추상


- apstract : 추상클래스
메소드명을 갖고 있으나 메소드의 내용을 갖고 있지 않은 클래스
필요한 틀을 강제시킴. 표준화를 만들어줌.
추상클래스를 상속받게 되면 표준 기능을 만듦

- interface : 변수 없이 다양한 메소드 틀을 가지고 있음
추상클래스를 상속받을 경우 단일상속으로 인해 기능 표준화엔 한계가 있음
다양한 기능 묶음을 추가할 수 있는 기능



alt + 방향키 : 알아서 위아래로 코드를 옮겨줌
ctrl+alt+방향키 : 코드 복사 (리눅스에서는 키 바꿔줘야 함. 예로 ctrl+alt+c)


--

터미널 vi
:, /, ? <- 명령모드로 들어가게 됨
: 설정
/ 검색, 커서 기준 아래로 제일 처음 나오는 단어 보여줌 -> n 누르면 다음꺼 찾아줌
? 검색, 커서 기준 위로 제일 처음 나오는 단어 보여줌 -> n 누르면 다음꺼 찾아줌
:s/기존단어/바꿀단어 <- 기존 단어를 바꿀 단어로 바꿔줌 단, 그 줄에 그 단어가 있어야 함. 한 번만 실행됨
:$s/기존단어/바꿀단어 <- 모든 줄에 해당 단어가 있으면 바꿈. 단, banana에서 na를 no로 바꾸면 banona가 됨

:q! 저장 안 하고 강제로 종료
:wq 저장 후 종료
shift+zz : 알아서 저장하고 끝냄



a, i : 입력모드
i : 커서의 앞에 입력모드 / I : 그 줄의 제일 앞에서 입력모드
a : 커서의 뒤에 입력모드 / A : 그 줄의 제일 뒤에서 입력모드
o : 아래에 한 줄 삽입 후 입력모드 / O : 위에 한 줄 삽입 후 입력모드
H : 내가 보는 화면 중 가장 위, M : 내가 보는 화면 중 가운데, L : 내가 보는 화면 중 가장 아래
W : 단어별 앞글자 뒤로 이동, E : 단어 끝, B : 단어별 앞글자 앞으로 이동
esc 누르면 입력모드 끝


--

절대경로 : root directory로부터 현재 파일이 위치한 디렉토리 경로를 전체표기
상대경로 : 나 자신이 있는 곳을 . 으로 나타냄 (부모는 ..)
~ <- 사용자폴더

ctrl+alt+t : 터미널 창 열기
man 명령어 : 명령어 사전


ls -F /
모든 리스트를 본다, / 루트 디렉토리 밑에 있는 디렉토리와 파일을 (/ : 디렉토리, ' ' : 파일, @ : 링크를 담음)
ls -a
숨긴 파일까지 보여줌

ls -A
. .. 뺀 나머지(숨긴 파일 포함) 다 보여줌

ls -l
자세히 보기, 만들어진 날짜, 용량, 접근자 chmod 777 (소유자, 그룹사용자, 기타사용자 권한 - 읽기,쓰기, 실행)
d (디렉토리)
l (심볼링크) - 접근할 수 있는 이름을 지우면 접근할 수 없음(링크 수 1)
d (하드링크) - 접근할 수 있는 본 이름을 지워도 접근 가능한 링크(링크 수 다수 존재 가능)
- (파일)

ls -l | grep java
자바라는 이름이 포함된 파일을 보여준다
(grep : 검색 조건)


초록색 - 실행파일
파란색 - 디렉토리


dir - 디렉토리 내부 보여줌
(윈도우 따라서 만들어줌)


파일 : 파일, 디렉토리, 심볼링크 다 포함되는 단어


mkdir (파일명) (파일명) ... (파일명) 폴더 여러개 동시에 만들어줌

mkdir -p (파일명)/(파일명)/(파일명)  경로 안에 파일 만들어줌. 이 때 경로가 없으면 경로도 만듦

rmdir (파일명) 폴더 삭제

rmdir -p (파일명)/(파일명)  경로 안에 있는 폴더 삭제. 이 때 경로도 같이 삭제

cat 파일명 <- 파일 내용 보여줌


more ~/.bashrc 한페이지씩 보여줌
less ~/.bashrc 한줄씩 보여줌
tail ~/.bashrc 마지막 10줄 보여줌
tail -20 ~/.bashrc  입력한 숫자만큼 보여줌


cp ../Random01Test.java . <<상위 폴더에 있는 파일을 내 폴더에 복사

mv aaa.txt ccc.txt <- aaa.txt 파일을 ccc.txt 파일로 이름 변경, mv (파일) (파일) : 이름 변경
mv ccc.txt aaa <- ccc.txt파일을 aaa경로로 옮김, mv (파일) (디렉토리) : 이동
mv aaa.txt bbb.txt ccc <- aaa.txt와 bbb.txt를 ccc로 옮김
mv -i RandomTest.java .. <- 파일이 있을 경우 덮어쓸지 질문

rm 파일/디렉토리 비어있지 않아도 삭제, 복구 불가
rm -i (파일명or디렉토리명) <- 비어있지 않을 경우 삭제할지 질문

touch 빈 파일 만들 수 있음, 옵션 바꿀 수 있음

grep -n (내용) (파일명) <- (내용)이 (파일)에 있는지 검색, 있으면 행번호 출력

find -name java <- java라는 이름을 찾음