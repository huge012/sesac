12/20

* n백만 건 : 스몰데이터, 개인 PC로 처리 가능
* 펙타급 데이터 : 빅데이터

* 테슬라 : 자동차회사? 데이터회사

* 애자일(Agile) 방법론 : 프로젝트의 생명주기동안 반복적인 개발을 촉진, 자기주도형 학습, 팀원들끼리 스스로 방법을 찾음


--

데이터의 이해

* 데이터
- 실제 세계에서 기록된 측정값
- 데이터 포인트 : 하나의 특정 관찰 단위
- 변수(column), 특성 : 데이터 포인트의 축정값
- 데이터 세트 : 여러 변수가 함께 있는 것

* 타블러 데이터
- 테이블형 데이터, 가로(ROW, RECORD, 어커런스, 인스턴스) 행 하나가 하나의 데이터
- structure 데이터, 정리된 데이터, 구조적 데이터 라고도 함
- column(feature)를 기준으로 정리됨

* 데이터 분석
- 숫자(정량적 데이터)로 분석함, 문자(정성적 데이터)로는 집계/측정이 안됨
- 정해진 데이터로만 구성되어 있는 경우(카테고리컬 변수, 범주형 변수) 집계 가능
- 데이터의 패턴을 분석 : 정보
- 데이터 분석 : 데이터를 정보와 지식으로 만드는 프로세스


데이터 가공 처리
1) 좋아요, 클릭, 트윗, 이메일, 신용카드 등 다양한 데이터 소스로 데이터를 수집
2) 패턴 인식


* MongoDB : noSQL에서 제일 성공한 BDMS툴, 다목적 툴, faster smarter
- 상용화 db 서버 : 오라클, msSQL // mySQL, mariaDB
- 오픈소스DB로 돌아오는 추세, sql과 nosql은 서로 보완책
- 엔지니어가 사용하기 쉽게 만들어짐
- 스케일링 하기 위해선 서버 사서 재구축하거나 추가작업 해줘야 했음, mongoDB는 클라우드에서 구현되므로 무한확장 가능
- SLA : 응답속도가 n초 넘어가면 배상해주는 정책
- sleep better : 보안성 좋음
- Fully managed : 전자동, 운영자가 필요없음, 클라우드에 몽고디비 설치해서 사용 예정
- 아틀라스 : 몽고디비에서 제공하는 클라우드 서비스
- 설치형 몽고디비 : 클라우드에 올리지 않고 랩탑이나 데이터센터에 직접 설치해서 사용 가능
- 다목적 DB, 읽기/검색엔진/공간데이터/타임시리즈 등 전부 다 처리해줌 ← 각 분야별 특화 DB가 존재함
- 금융, 국방, 헬스케어, 공공분야, 커머스, 게임, 지불, 제조업 등등 다방면에서 사용

* multi-cloud



* 클러스터 만들기
https://junho85.pe.kr/1979
Replica Set - 3 nodes // 3개 노드로 서버가 만들어짐
몽고디비 컬렉션 = 관계형 데이터의 테이블

mongodb shell 몽고디비 명령어 위주, cmd와 유사
application 실제 제작한 어플리케이션에서 접속, 자바스크립트
mongodb compass 몽고디비 컴파스, gui 화면으로 보고 관리할 수 있는 툴



--

* mongoDB 몽고쉘
- db : 현재 사용하는 db 이름 출력
- use <db이름> : 사용중인 db 바꿈, 만약 db이름 없을 경우 새로운 (비어있는) db 만들어줌
- db.myCollection.insertOne( { x: 1 } );    { x: 1 }이 데이터, 제이슨 데이터. 하나의 도큐먼트(레코드)를 입력. 없으면 insert, 있으면 update
- db.myCollection.insertOne( {} ); 비어있는 데이터 입력, id는 부여됨.
- show dbs : admin, local 보여줌. 데이터 없는 db는 보여주지 않음

* mongoDB
- 기본적으로 admin, local 있음
- test / Cluster0 등은 데이터가 없음, 보이지 않음, 임의로 만들었으나 내용이 없음
- 컬렉션이 꼭 있어야 함
- 수 페타바이트를 다루는 것이 목적이라서 id는 절대 고유
- admin : root 데이터베이스. 여기에 추가된 사용자는 전체 몽고디비 내의 모든 데이터베이스에 대해 모든 권한 획득. 서버 전역에 걸친 모든 명령어는 이곳에서만 실행 가능. 디비 목록조회, 시작, 중지 등.
- local : 특정서버에만 보관하는 정보를 담는 곳. 복제 불가능
- config : 샤드 정보를 저장


* 웹 서비스(네트워크 상에서 서로 다른 종류의 컴퓨터들 간 상호작용을 하기 위한 소프트웨어 시스템)
-> 웹 API (데이터 교환하는 표준 방식, 웹 서버 또는 웹 브라우저를 위한 애플리케이션 프로그래밍 인터페이스)

* API : 애플리케이션 프로그래밍 인터페이스. 컴퓨터나 컴퓨터 프로그램 사이의 연결, 서버와 데이터베이스에 대한 출입구 역할, 애플리케이션과 기기가 원활하게 통신할 수 있도록 함, 모든 접속을 표준화함
- 공공데이터도 API로 유통 (공공api - 공공데이터포털)

* REST API(RESTfull API) : REST 아키텍처의 제약 조건을 준수하는 애플리케이션 프로그래밍 인터페이스
- 프로토콜이나 표준이 아닌 아키텍처 원칙 세트. REST를 다양한 방식으로 구현 가능
- HTTP URI(Uniform Resource Identifier)를 통해 자원(Resource)을 명시하고,
  HTTP Method(POST, GET, PUT, DELETE)를 통해
  해당 자원(URI)에 대한 CRUD Operation을 적용하는 것을 의미합니다.

* FINTECH : 금융+기술, 금융과 ICT의 결합을 통해 새롭게 등장한 산업 및 서비스 분야, 송금/결제, 금융데이터 분석, 금융 소프트웨어, 플랫폼으로 분류. TOSS, 자산 관리 등.

* json
- 속성-값(키-값) 쌍으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷 xml을 대체하는 주요 포맷
- 웹에서 정보 주고받을 때 xml 포맷 사용, json과 xml은 비슷한 형태, json이 더 범용성 좋음
- json(오브젝트형) 형태 데이터를 관계형 데이터로 바꿔줌 : orl ?
- noSQL DB : jsonDB


※ 검색, 정리하기
Big Data(2010+-)
Cloud, MongoDB(NoSQL)
json data
REST API

data management --> CRUD


---


데이터 모델링

* e-커머스 서비스 데이터 모델링
- 상품 목록, 상품 주문

{
  "id": 1
  "title": good,
  "content": "몽고 조아",
  "tags": [
    "mongo", "good", "study"
    ],				// 스칼라 형태 뿐만 아니라 벡터 형태(입체적, 리스트)로 입력 가능
  "likes": 20
}



---

인텔리j
파이참
datagrip : 수많은 데이터베이스를 지원
