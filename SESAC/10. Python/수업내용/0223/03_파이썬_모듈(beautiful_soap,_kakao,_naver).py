# -*- coding: utf-8 -*-
"""03. 파이썬 - 모듈(Beautiful Soap, kakao, naver).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YzEtyIdJvCR8nHV47RYTUpscmMr5zuf2

# 외부 모듈 - BeautifulSoup

웹페이지 분석 모듈

https://www.crummy.com/software/BeautifulSoup/bs4/doc/
"""

from bs4 import BeautifulSoup

src = """
<html>
	<head>
		<title> test page </title>
	</head>
	<body>
		<strong>a~</strong>
		<p>bcd</p>
	</body>
</html>
"""
print(src)

# html 파싱해서 코드 넣어줌
html_parser = BeautifulSoup(src, 'html.parser')
html_parser

html_parser.head

html_parser.body

html_parser.strong

"""# 카카오 도서 검색 API 사용하기

쿼리 문자열 구조

도메인 주소 ? 매개변수 목록

매개변수 목록에서 매개변수와 매개변수는 &로 구분

매개변수는 키=값 구조를 지님
"""

import urllib.request

url = 'https://dapi.kakao.com/v3/search/book'

target_param = "target=title"
query_in = input("검색 질의 : ")
page_param = "page=2"
query_param = "query="+urllib.parse.quote(query_in) # utf-8로 인코딩
query_str = url+'?'+target_param+'&'+query_param+'&'+page_param

print(query_str)

request = urllib.request.Request(query_str) # 서비스 요청에 사용할 객체를 생성
# request.add_header("Authorization", "KakaoAK 	REST KEY") # RESTAPI 키 입력
request.add_header("Authorization", "KakaoAK 20b1e756b870ef9cd5ea0bb96cbcbd5c") # RESTAPI 키
response = urllib.request.urlopen(request)
res = response.read().decode('utf-8')
print(res)

"""json으로 정보 읽어오기"""

import json

if response.getcode() != 200:
  print("요청한 결과에 문제가 있습니다.")
  exit(0) # 프로그램 종료

jres = json.loads(res)
if jres == None:
  print("Json.loads 실패")
  exit(0) # 프로그램 종료
for post in jres['documents']:
  print("제목: ", post['title'])
  print("설명: ", post['contents'])
  print("url: ", post['url'])
  print("가격: ", post['price'])
  print("----------------------------------------------")

"""# 네이버 도서 검색 API 사용하기"""

import urllib.request

url = 'https://openapi.naver.com/v1/search/book.xml'

query_in = input("검색 질의 : ")
query_param = "query="+urllib.parse.quote(query_in) # utf-8로 인코딩
query_str = url+'?'+query_param

print(query_str)

request = urllib.request.Request(query_str) # 서비스 요청에 사용할 객체를 생성
# request.add_header('X-Naver-Client-Id', '발급받은 client ID 값')
request.add_header('X-Naver-Client-Id', '_KZP47_jdTdi_UkqtXXs')
# request.add_header('X-Naver-Client-Secret', '발급받은 client secret 값') 
request.add_header('X-Naver-Client-Secret', 'UzKAmeafKx')

response = urllib.request.urlopen(request)
res = response.read().decode('utf-8')
print(res)

"""xml로 정보 읽어오기"""

from bs4 import BeautifulSoup

xmlsoup = BeautifulSoup(res, 'html.parser')
items = xmlsoup.find_all('item')
for item in items:
  print("제목 : ", item.title.get_text())
  print("설명 : ", item.description.get_text())
  print("가격 : ", item.price.get_text())
  print("-------------------------------------------------------")

"""# 네이버 파파고 API


"""

import urllib.request

# url
url = 'https://openapi.naver.com/v1/papago/n2mt'

# 파라미터 - post 방식
source_param = "source=ko"
target_param = "target=zh-CN"
text_in = input("변환할 문장 : ")
text_param = "text="+urllib.parse.quote(text_in) # utf-8로 인코딩

data = source_param+'&'+target_param+'&'+text_param

request = urllib.request.Request(url)
request.add_header('X-Naver-Client-Id', '_KZP47_jdTdi_UkqtXXs') 
request.add_header('X-Naver-Client-Secret', 'UzKAmeafKx')
response = urllib.request.urlopen(request, data=data.encode("utf-8"))

res = response.read().decode('utf-8')

import json

if response.getcode() != 200:
  print("요청한 결과에 문제가 있습니다.")
  exit(0) # 프로그램 종료

jres = json.loads(res)

if jres == None:
  print("Json.loads 실패")
  exit(0) # 프로그램 종료

print("기존 언어 : ",jres['message']['result']['srcLangType'])
print("변환 언어 : ",jres['message']['result']['tarLangType'])
print("변환 결과 : ",jres['message']['result']['translatedText'])
print("----------------------------------------------")

"""# 공공데이터 유기동물 조회 서비스"""

import requests

url = 'http://openapi.animal.go.kr/openapi/service/rest/abandonmentPublicSrvc/abandonmentPublic'
bgnde_param = "bgnde=20201201"
endde_param = "endde=20220222"
key_param = "serviceKey=%2FmPX9JMP12bAzgFCCCViMk%2BP2z6LqfctAnP8FpO%2BR7tTu%2FHGo%2FXLEzBakc5%2Fo8ADu2iGl0JmJNujCMpbgG%2Fr1w%3D%3D"

query_str = url+'?'+bgnde_param+'&'+endde_param+'&'+key_param

request = urllib.request.Request(query_str)
response = urllib.request.urlopen(request)
res = response.read().decode('utf-8')
print(res)

"""# 일별 박스오피스 API"""

import requests

url = 'http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json'
key_param = "key=d839e693bcdd8ed3b727a1fa2165754c"
date_input = input("조회할 날짜 입력(yyyymmdd) : ")
targetDt_param = 'targetDt='+urllib.parse.quote(date_input)
query_str = url+'?'+key_param+'&'+targetDt_param

request = urllib.request.Request(query_str)
response = urllib.request.urlopen(request)
res = response.read().decode('utf-8')
print(res)

import json

if response.getcode() != 200:
  print("요청한 결과에 문제가 있습니다.")
  exit(0) # 프로그램 종료

jres = json.loads(res)

if jres == None:
  print("Json.loads 실패")
  exit(0) # 프로그램 종료


print("----------------------------------------------")