# -*- coding: utf-8 -*-
"""01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JCUltgi-EnvMv4tbm6ntwNcqSL2eqsKx
"""

#!sudo apt-get install -y fonts-nanum # !:호스트 명령어 실행, sudo:super user 명령어, apt-get:우분투 명령어
#!sudo fc-cache -fv # 폰트 캐시 재생성 -강제생성 및 로그띄어줌
#!rm ~/.cache/matplotlib -rf # matplotlib 캐시메모리 정보 삭제
# 1. 최초 실행 후 런타임 재기동 하시고,
# 2. 런타임 재기동 후 주석처리 하세요.

# Commented out IPython magic to ensure Python compatibility.
# %run my_init.py # % 주피터 명령어
# %matplotlib inline

"""/content/drive/MyDrive/seSac/01. 머신러닝/D02/01.ipynb"""

base_dir = '/content/drive/MyDrive/seSac/01. 머신러닝/D02'

# Commented out IPython magic to ensure Python compatibility.
# %%writefile test.txt
# 이 파일은 테스트 파일입니다.

import os

file_name = os.path.join(base_dir, 'test.txt')
print(file_name)

base_dir + '/test.txt'

# Commented out IPython magic to ensure Python compatibility.
# %%writefile file_name
# 이 파일은 테스트 파일입니다.

f = open(file_name, 'w')
f.write('이 파일은 테스트 파일입니다.\n')
f.close()

"""# 제목1
## 제목2
### 제목3
#### 제목4
##### 제목5

`f = open(file_name, 'w')`<br>
`f.write('이 파일은 테스트 파일입니다.\n')`<br>
`f.close()`

>내용

>> 내용

선형 방정식은 $y = ax+b$ 와 같은 유형입니다. $X_{i+1}+X_{i}^{2+e}$

선형 방정식은 $$y = ax+b$$ 와 같은 유형입니다.

$\sum_{n=1}^{\infty} 2^{-n} = 1$

편차제곱합 = 분산

평균 : $μ$ 모평균, $m$ 표본평균

$i$번째 값 : $x_i$ 

$∑_{i=1}^{n}(\bar x-x_i)^2$

$\sigma^{2}=\sum_{i=1}^{n}(\bar{x}-x_{i})^2$

$$\sigma^{2}=\sum_{i=1}^{n}(\bar{x}-x_{i})^2$$
"""

bream_length = [25.4, 26.3, 26.5, 29.0, 29.0, 29.7, 29.7, 30.0, 30.0, 30.7, 31.0, 31.0, 
                31.5, 32.0, 32.0, 32.0, 33.0, 33.0, 33.5, 33.5, 34.0, 34.0, 34.5, 35.0, 
                35.0, 35.0, 35.0, 36.0, 36.0, 37.0, 38.5, 38.5, 39.5, 41.0, 41.0]
bream_weight = [242.0, 290.0, 340.0, 363.0, 430.0, 450.0, 500.0, 390.0, 450.0, 500.0, 475.0, 500.0, 
                500.0, 340.0, 600.0, 600.0, 700.0, 700.0, 610.0, 650.0, 575.0, 685.0, 620.0, 680.0, 
                700.0, 725.0, 720.0, 714.0, 850.0, 1000.0, 920.0, 955.0, 925.0, 975.0, 950.0]

len(bream_length)

len(bream_weight)

smelt_length = [9.8, 10.5, 10.6, 11.0, 11.2, 11.3, 11.8, 11.8, 12.0, 12.2, 12.4, 13.0, 14.3, 15.0]
smelt_weight = [6.7, 7.5, 7.0, 9.7, 9.8, 8.7, 10.0, 9.9, 9.8, 12.2, 13.4, 12.2, 19.7, 19.9]

print(f"빙어 length 개수 : {len(smelt_length)}, weight 개수 : {len(smelt_weight)}")

?plt.scatter # 도움말

??plt.scatter # 도움말

plt.scatter(bream_length, bream_weight)
plt.xlabel('length')
plt.ylabel('weight');

plt.scatter(bream_length, bream_weight)
plt.scatter(smelt_length, smelt_weight)
plt.xlabel('length')
plt.ylabel('weight')
plt.legend(['bream', 'smelt'])
plt.show()

?range(3)

type(range(3))

for i in range(3):
  print(i)

a = list(range(10, 60, 10))
a

b = list(range(1, 6))
b

zip(a, b)

for t in zip(a, b):
  print(t)

for x, y in zip(a, b):
  print(f"{x}, {y}")

# List Comprehension
data = [t for t in zip(a, b)]
data

data2 = [(x, y) for x, y in zip(a, b)]
data2

data3 = [(x*2, y*3) for x, y in zip(a, b)]
data3

a = [1, 2, 3]
b = {"x":1, "y":2}

def fn(*args, **kwargs):
  for i, arg in enumerate(args):
    print(f"{i}:{arg}")
  for k, v in kwargs.items():
    print(f"{k} : {v}")

fn(*a, **b)

fn(1, 2, 3, x=1, y=2)