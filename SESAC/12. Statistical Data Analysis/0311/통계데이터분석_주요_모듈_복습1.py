# -*- coding: utf-8 -*-
"""통계데이터분석-주요 모듈 복습1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18BpZTtdLwqf7DcFiSAEiJVdhECeIqF-Z

# numpy 기본 P.133

장점 개요 - 행렬 계산이 편해졌다.
"""

ls = [1,2,3,4,5]

ls_twice =[]
for e in ls:
  ls_twice.append(e*2)
ls_twice

import numpy as np
arr = np.array(ls)
arr_twice = arr*2
arr_twice

"""강한 wrapping"""

arr = np.arange(10000)
arr

arr = np.array(range(10000))
arr

"""wrapping 이란?"""

def madd(a,b):
  return a+b

def msum(ls):
  s = 0
  for e in ls:
    s = madd(s,e)
  return s

def count(ls):
  cnt=0
  for _ in ls:
    cnt+=1
  return cnt

ls=[1,2,3,8,4]
s = msum(ls)
l = count(ls)
print(f'평균:{s/l:.2f}')

def average(ls):
  return msum(ls)/count(ls)

print(f'평균:{average(ls):.2f}')

"""# 텐서"""

data = np.random.rand(5,2,3)
data

data.shape

data2 = data.reshape(6,-1)
data2

data2.shape

#data3 = data.reshape(7,-1) #요구하는 구조로 정확하게 구성하지 못함
#data3

#파이썬의 리스트는 tensor 자료가 아닐 수 있다.
zagged_arr = [[1,2,3],[1,2],[1,2,3,4,5]]
zagged_arr

data2.ndim

data2.shape

"""# 행렬 계산"""

arr1 = np.array([[1,2],[3,4]])
arr2 = np.array([[4,6],[3,7]])

arr3 = arr1 + arr2
arr3

ls1 = [[1,2],[3,4]]
ls2 = [[4,6],[3,7]]
ls3 = ls1 + ls2
ls3

"""# 원소 형식"""

arr1 = np.array([1,2,3,4,5])
arr1.dtype

type(arr1[0])

arr2 = np.array([1,2,3,4,5.])
arr2.dtype

type(arr2[0])

arr3 = np.array([1,2,'a',4,5])
arr3.dtype

type(arr3[0])

arr3[0]

ls = [1,2,3,4,5.]
type(ls[0]),type(ls[4])

"""# 형식 변환"""

arr4 = np.array(['1','2','3','4'])
for e in arr4:
  print(e,end=',')
print()

s = arr4[0]
for e in range(1,len(arr4)):
  s+=arr4[e]
print(s)

arr5 = arr4.astype(int)
print(arr5.sum())

"""# 산술 연산, 필터링"""

arr = np.array([[1,2],[3,4]])
sq_arr = arr*arr
sq_arr

d5_arr = arr/5
d5_arr

arr = np.array([-1,2,3,4,-4,9])
filter = arr>=0
print(filter)
darr = arr[filter]
print(darr)

arr = np.array([-1,2,3,4,-4,9])
filter = arr%2 == 0
print(filter)
darr = arr[filter]
print(darr)

"""# 슬라이싱"""

arr = np.array([[1,2,3],[4,5,6]])
arr.shape

for i in range(2):
  for j in range(3):
    print(arr[i,j],end=',')
  print()

print(arr[0,1])
print(arr[0][1])

arr = np.arange(100)
arr

arr[3:10] #arr[3]~arr[10-1]

arr[:5]

arr[95:]

arr[-1]

arr[90:-3]

pre80 = arr[:len(arr)*4//5]
pre80

post20 = arr[len(arr)*4//5:]
post20

"""# 필터링 강화"""

names = np.array(['Bob','Joe','Will','Bob','Will','Joe','Joe'])
scores = np.array([90,80,74,85,78,88,85])
filter= names=='Bob'
scores[filter]

texts = np.array(["Hello, How are you?", "Where r u from?", "RD GG","ready Go Go"])
filter = [True if "r" in text else False for text in texts]
filter
texts[filter]

"""numpy는 아니지만 컴프리핸션을 more..."""

data = [i*i for i in range(10)]
print(data)

data2 = [i*i for i in range(10) if i%2==0]
print(data2)

data3 = [i*i if i%2==0 else -(i*i) for i in range(10)]
print(data3)