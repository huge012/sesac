<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- DB 연동 -->
	<!-- DB 정보 적어놓은 properties 파일 등록 -->
	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/spring/appServlet/oracleDBInfo.properties"/>
		<property name="fileEncoding" value="UTF-8" />
	</bean> -->

	<!-- spring에서 제공하는 DB 연결 소스(properties에 있는 값 참조) -->
	<!-- 요청할 때마다 DB Connection을 만듦 -->
	<!-- DataSource dataSource = new org.springframework.jdbc.datasource.DriverManagerDataSource() -->
<!-- 	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean> -->
	
	
	
	<!-- DB Pool 받아와서 요청할 때 사용 -->
	<!-- DBCP - BasicDataSource 사용, 미리 DB 내용 가져와서 Data Pool을 만듦 -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean> -->
	
	
	
	
	
	<!-- DB Pool 받아와서 요청할 때 사용 -->
	<!-- JNDI 활용하여 Database Pool 만들기
		jndi-name은 server의 context.xml에 resource로 등록한다
		등록법 : https://tomcat.apache.org/tomcat-9.0-doc/jndi-datasource-examples-howto.html#Oracle_8i,_9i_&_10g 에서 복사
		server 삭제하면 데이터 풀 만들 수 없음 -->
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/myoracle"   resource-ref="true" />
	
	
	
	<!-- mybatis로 db와 db sql문 연결 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- sqlMapConfig.xml 파일 위치 지정 -->
		<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml" />
		<!-- mapper 파일(sql 파일들) -->
		<property name="mapperLocations" value="classpath:mybatis/mappers/*Mapper.xml" />
	</bean>

	<!--  sqlSession 생성(위의 sqlSessionFactory 저장) -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	

</beans>
